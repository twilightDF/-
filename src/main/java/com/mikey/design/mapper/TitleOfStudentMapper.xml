<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mikey.design.mapper.TitleOfStudentMapper">
  <resultMap id="BaseResultMap" type="com.mikey.design.entity.TitleOfStudent">
    <id column="des_of_stu_id" jdbcType="INTEGER" property="desOfStuId" />
    <result column="des_of_stu" jdbcType="INTEGER" property="desOfStu" />
    <result column="des_of_title" jdbcType="INTEGER" property="desOfTitle" />
    <result column="des_state" jdbcType="INTEGER" property="desState" />
    <result column="des_wish_order" jdbcType="INTEGER" property="desWishOrder" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    des_of_stu_id, des_of_stu, des_of_title, des_state, des_wish_order
  </sql>
  <select id="selectByExample" parameterType="com.mikey.design.entity.TitleOfStudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from des_title_of_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from des_title_of_student
    where des_of_stu_id = #{desOfStuId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from des_title_of_student
    where des_of_stu_id = #{desOfStuId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mikey.design.entity.TitleOfStudentExample">
    delete from des_title_of_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mikey.design.entity.TitleOfStudent">
    insert into des_title_of_student (des_of_stu_id, des_of_stu, des_of_title, 
      des_state, des_wish_order)
    values (#{desOfStuId,jdbcType=INTEGER}, #{desOfStu,jdbcType=INTEGER}, #{desOfTitle,jdbcType=INTEGER}, 
      #{desState,jdbcType=INTEGER}, #{desWishOrder,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.mikey.design.entity.TitleOfStudent">
    insert into des_title_of_student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="desOfStuId != null">
        des_of_stu_id,
      </if>
      <if test="desOfStu != null">
        des_of_stu,
      </if>
      <if test="desOfTitle != null">
        des_of_title,
      </if>
      <if test="desState != null">
        des_state,
      </if>
      <if test="desWishOrder != null">
        des_wish_order,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="desOfStuId != null">
        #{desOfStuId,jdbcType=INTEGER},
      </if>
      <if test="desOfStu != null">
        #{desOfStu,jdbcType=INTEGER},
      </if>
      <if test="desOfTitle != null">
        #{desOfTitle,jdbcType=INTEGER},
      </if>
      <if test="desState != null">
        #{desState,jdbcType=INTEGER},
      </if>
      <if test="desWishOrder != null">
        #{desWishOrder,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mikey.design.entity.TitleOfStudentExample" resultType="java.lang.Long">
    select count(*) from des_title_of_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update des_title_of_student
    <set>
      <if test="record.desOfStuId != null">
        des_of_stu_id = #{record.desOfStuId,jdbcType=INTEGER},
      </if>
      <if test="record.desOfStu != null">
        des_of_stu = #{record.desOfStu,jdbcType=INTEGER},
      </if>
      <if test="record.desOfTitle != null">
        des_of_title = #{record.desOfTitle,jdbcType=INTEGER},
      </if>
      <if test="record.desState != null">
        des_state = #{record.desState,jdbcType=INTEGER},
      </if>
      <if test="record.desWishOrder != null">
        des_wish_order = #{record.desWishOrder,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update des_title_of_student
    set des_of_stu_id = #{record.desOfStuId,jdbcType=INTEGER},
      des_of_stu = #{record.desOfStu,jdbcType=INTEGER},
      des_of_title = #{record.desOfTitle,jdbcType=INTEGER},
      des_state = #{record.desState,jdbcType=INTEGER},
      des_wish_order = #{record.desWishOrder,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mikey.design.entity.TitleOfStudent">
    update des_title_of_student
    <set>
      <if test="desOfStu != null">
        des_of_stu = #{desOfStu,jdbcType=INTEGER},
      </if>
      <if test="desOfTitle != null">
        des_of_title = #{desOfTitle,jdbcType=INTEGER},
      </if>
      <if test="desState != null">
        des_state = #{desState,jdbcType=INTEGER},
      </if>
      <if test="desWishOrder != null">
        des_wish_order = #{desWishOrder,jdbcType=INTEGER},
      </if>
    </set>
    where des_of_stu_id = #{desOfStuId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mikey.design.entity.TitleOfStudent">
    update des_title_of_student
    set des_of_stu = #{desOfStu,jdbcType=INTEGER},
      des_of_title = #{desOfTitle,jdbcType=INTEGER},
      des_state = #{desState,jdbcType=INTEGER},
      des_wish_order = #{desWishOrder,jdbcType=INTEGER}
    where des_of_stu_id = #{desOfStuId,jdbcType=INTEGER}
  </update>
  <!--回档第一志愿-->
  <update id="backFirstWish" parameterType="java.lang.Integer">
    update des_title_of_student set des_state =2 where des_of_stu =#{studentId} and des_wish_order =0
  </update>
  <!--回档第二志愿-->
  <update id="backSecondWish" parameterType="java.lang.Integer">
    update des_title_of_student set des_state =2 where des_of_stu =#{studentId} and des_wish_order =1
  </update>
</mapper>